{"version":3,"sources":["../src/route.page.js"],"names":["marked","require","express","config","router","Router","PostModel","auth","get","req","res","next","render","console","log","clearCookie","cookieName","path","redirect","title","id","query","findOne","_id","err","post","mkContent","content","module","exports"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AACA,IAAIC,UAAUD,QAAQ,SAAR,CAAd;AACA,IAAIE,SAASF,QAAQ,UAAR,CAAb;AACA,IAAIG,SAASF,QAAQG,MAAR,EAAb;AACA,IAAIC,YAAYL,QAAQ,eAAR,CAAhB;AACA,IAAIM,OAAON,QAAQ,oBAAR,CAAX;;AAEA;AACAG,OAAOI,GAAP,CAAW,SAAX,EAAsB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7CD,MAAIE,MAAJ,CAAW,QAAX;AACAC,UAAQC,GAAR,CAAY,wBAAZ;AACD,CAHD;;AAKA;AACAV,OAAOI,GAAP,CAAW,SAAX,EAAsB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9CD,MAAIE,MAAJ,CAAW,QAAX;AACAC,UAAQC,GAAR,CAAY,wBAAZ;AACD,CAHD;;AAKA;AACAV,OAAOI,GAAP,CAAW,UAAX,EAAuB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC/CD,MAAIK,WAAJ,CAAgBZ,OAAOa,UAAvB,EAAmC,EAAEC,MAAM,GAAR,EAAnC;AACAP,MAAIQ,QAAJ,CAAa,GAAb;AACD,CAHD;;AAKA;AACAd,OAAOI,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,MAAIE,MAAJ,CAAW,OAAX,EAAoB,EAAEO,OAAO,SAAT,EAApB;AACD,CAFD;;AAIA;AACAf,OAAOI,GAAP,CAAW,QAAX,EAAqB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5CD,MAAIE,MAAJ,CAAW,OAAX,EAAoB,EAAEO,OAAO,MAAT,EAApB;AACD,CAFD;;AAIA;AACAf,OAAOI,GAAP,CAAW,eAAX,EAA4B,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACnDD,MAAIE,MAAJ,CAAW,QAAX;AACD,CAFD;;AAIA;AACAR,OAAOI,GAAP,CAAW,aAAX,EAA0B,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACjD,MAAIS,KAAKX,IAAIY,KAAJ,CAAUD,EAAnB;;AAEAV,MAAIE,MAAJ,CAAW,MAAX,EAAmB,EAAEQ,MAAF,EAAnB;AACD,CAJD;;AAMA;AACAhB,OAAOI,GAAP,CAAW,aAAX,EAA0B,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACjD,MAAIS,KAAKX,IAAIY,KAAJ,CAAUD,EAAnB;;AAEAd,YAAUgB,OAAV,CAAkB,EAAEC,KAAKH,EAAP,EAAlB,EAA+B,UAASI,GAAT,EAAcC,IAAd,EAAoB;AACjDA,SAAKC,SAAL,GAAiB1B,OAAOyB,KAAKE,OAAZ,CAAjB;AACAjB,QAAIE,MAAJ,CAAW,MAAX,EAAmB,EAAEa,UAAF,EAAnB;AACD,GAHD;AAID,CAPD;;AASAG,OAAOC,OAAP,GAAiBzB,MAAjB","file":"route.page.js","sourcesContent":["var marked = require('marked');\nvar express = require('express');\nvar config = require('./config');\nvar router = express.Router();\nvar PostModel = require('./models/post');\nvar auth = require('./middlewares/auth');\n\n/* GET signup page. */\nrouter.get('/signup', function(req, res, next) {\n  res.render('signup');\n  console.log('-------signup-page----');\n});\n\n/* GET signin page. */\nrouter.get('/signin', function (req, res, next) {\n  res.render('signin');\n  console.log('-------signin-page----');\n});\n\n/* GET signout */\nrouter.get('/signout', function (req, res, next) {\n  res.clearCookie(config.cookieName, { path: '/' });\n  res.redirect('/');\n});\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\n/* GET posts page. */\nrouter.get('/posts', function(req, res, next) {\n  res.render('posts', { title: '我的文章' });\n});\n\n/* GET posts create page. */\nrouter.get('/posts/create', function(req, res, next) {\n  res.render('create');\n});\n\n/* GET posts edit page. */\nrouter.get('/posts/edit', function(req, res, next) {\n  var id = req.query.id;\n\n  res.render('edit', { id });\n});\n\n/* GET posts show page. */\nrouter.get('/posts/show', function(req, res, next) {\n  var id = req.query.id;\n\n  PostModel.findOne({ _id: id }, function(err, post) {\n    post.mkContent = marked(post.content);\n    res.render('show', { post });\n  });\n});\n\nmodule.exports = router;\n"]}